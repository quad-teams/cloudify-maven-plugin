#!/bin/bash

CREATE_PROJECT=false
PROJECT_ID=gcloud-mojo

createProject() {
    gcloud projects create "$PROJECT_ID"
    gcloud config set project "$PROJECT_ID"
    gcloud config set run/region us-central1
    gcloud beta billing accounts list

    # It reads the account ID
    echo "> Enter the billing account ID you want to use:"
    read -r ACCOUNT_ID

    gcloud beta billing projects link "$PROJECT_ID" --billing-account="$ACCOUNT_ID"
    gcloud services enable cloudbuild.googleapis.com
    gcloud services enable run.googleapis.com

    PROJECT_NUMBER=$(gcloud beta projects describe "$PROJECT_ID" | grep 'projectNumber: ' | cut -d\   -f2 | tr -d \')
    gcloud projects add-iam-policy-binding "$PROJECT_ID" --member serviceAccount:"$PROJECT_NUMBER"@cloudbuild.gserviceaccount.com --role roles/run.admin
    gcloud projects add-iam-policy-binding "$PROJECT_ID" --member serviceAccount:"$PROJECT_NUMBER"@cloudbuild.gserviceaccount.com --role roles/iam.serviceAccountUser
    gcloud builds submit --config cloudbuild.yaml .
}

deploy() {
    if [ "$CREATE_PROJECT" = true ] ; then
        createProject
    else
        gcloud config set project "$PROJECT_ID"
    fi

    gcloud builds submit --config cloudbuild.yaml .
}

printInstructions() {
    echo "========================================================================"
    echo -e "In order to deploy this project, you need \e[36mgcloud\e[0m set in your PATH."
    echo -e "You can download it from \e[36;4mhttps://cloud.google.com/sdk\e[0m"
    echo "========================================================================"
}

if [[ $(command -v gcloud) ]]; then
    deploy
else
    printInstructions
fi
